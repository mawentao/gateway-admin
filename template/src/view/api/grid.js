define(function(require){
    /* generated by mengma @2018-04-01 00:57 */
    var store,grid,gridid;
    var dialog = require('./dialog');
    var o={};
    
    o.init = function(domid){
        gridid = domid;
		var stateOpts = dict.get_options('status',{text:'全部',value:-1});
        store = new mwt.Store({
            proxy: new mwt.HttpProxy({
                beforeLoad : store_before_load,
                afterLoad  : store_after_load,
                url : ajax.getAjaxUrl("gwapp&action=query")
            })
        });
        grid = new MWT.Grid({
            render      : gridid,
            store       : store,
            pagebar     : true,     //!< 分页
            pageSize    : 20,       //!< 每页大小
            multiSelect : false,    //!< 多行选择
            bordered    : false,    //!< 单元格边框
            striped     : true,     //!< 斑马纹
            noheader    : false,    //!< 隐藏列头
            notoolbox   : false,    //!< 隐藏工具箱(刷新,斑马纹,导出Excel)
            position    : 'fixed',  //!< 位置(relative:相对位置,其他:固定头部和尾部)
            bodyStyle   : 'top:85px;', 
            tbarStyle   : 'margin-bottom:10px;',
			filename    : '网关应用列表',
            tbar: [
                {type:'select',id:'state-sel-'+gridid,label:'状态',options:stateOpts,value:-1,handler:o.query},
                {type:'search',id:'so-key-'+gridid,width:200,handler:o.query,placeholder:'查询应用名或公共前缀'},
                '->',
                {label:iconlabel.plus('新增应用'),handler:function(){
                    dialog.open({id:0},o.query);
                }}
            ],
            cm: new MWT.Grid.ColumnModel([
                {head:'ID',dataIndex:'id',width:60,align:'left',sort:true},
                {head:'应用名',dataIndex:'name',width:100,align:'left',sort:true},
                {head:'公共前缀',dataIndex:'prepath',width:150,align:'left',sort:true,render:function(v,item){
                    return '<span style="font-family:monospace;color:#f57c00;">'+v+'</span>';
                }},
                {head:'后端服务环境',dataIndex:'id',width:100,align:'center',sort:true,render:function(v,item){
                    return '<button class="mwt-btn mwt-btn-primary mwt-btn-sm radius">详情</button>';
                }},
                {head:'备注',dataIndex:'remark',align:'left',sort:false,render:function(v,item){
					return v;
                }},
                {head:'负责人',dataIndex:'owners',width:130,align:'left',sort:false},
                {head:'状态',dataIndex:'status',width:90,align:'center',sort:true,render:function(v,item){
                    return gridRender.state(v,'status');
                }},
                {head:'创建时间',dataIndex:'ctime',width:120,align:'center',sort:true,render:mwt.GridRender.datetime},
                {head:'更新时间',dataIndex:'mtime',width:120,align:'center',sort:true,render:mwt.GridRender.datetime},
                {head:'操作',dataIndex:'id',align:'center',width:165,sort:false,render:function(v,item){
					var disabled = item.uid==dz.uid ? '' : 'disabled';
                    var cls = 'mwt-btn mwt-btn-default mwt-btn-sm';
                    var url = "#/pr/detail~id="+item.id;
                    var viewbtn = '<a class="'+cls+'" name="viewbtn-'+gridid+'" data-id="'+v+'" href="'+url+'">接口列表</a>';
					var editbtn = '<button class="'+cls+'" '+disabled+' name="editbtn-'+gridid+'" data-id="'+v+'">修改</button>';
					var delbtn = '<button class="'+cls+'" '+disabled+' name="delbtn-'+gridid+'" data-id="'+v+'">删除</button>';
                    var btns = [viewbtn,editbtn,delbtn];
                    return '<div class="mwt-btn-group-radius">'+btns.join('')+'</div>';
                }}
            ])
        });
        store.on('load',function(){
            mwt.popinit();
            // 编辑按钮
            jQuery('[name=editbtn-'+gridid+']').unbind('click').click(editbtnClick);
            // 删除按钮
            jQuery('[name=delbtn-'+gridid+']').unbind('click').click(delbtnClick);
            // 启用开关
            jQuery('[name=adenable]').unbind('change').change(function(){
                var id = jQuery(this).data('dtname');
                var enable = jQuery(this).is(':checked') ? 1 : 0;
                ajax.post('t_budget&action=setEnable',{id:id,enabled:enable},function(res){
                    if (res.retcode!=0) mwt.notify(res.retmsg,1500,'danger');
                    mwt.notify('已保存',1500,'success');
                });
            });
        });
        grid.create();
        o.query();
    };

    // 查询
    o.query = function() {
        store.baseParams = {
            state: mwt.get_select_value('state-sel-'+gridid),
            key: mwt.get_value("so-key-"+gridid)
        };
        grid.load();
    };

    // 编辑按钮点击事件
    function editbtnClick() 
    {/*{{{*/
        var id = jQuery(this).data('id');
        var item = grid.getRecord('id',id);
        dialog.open(item,o.query);
    }/*}}}*/

    // 删除按钮点击事件
    function delbtnClick() 
    {/*{{{*/
        var id = jQuery(this).data('id');
        mwt.confirm('确定要删除吗?',function(res){
            if (!res) return;
            ajax.post('gwapp&action=remove',{id:id},function(res){
                if (res.retcode!=0) mwt.alert(res.retmsg);
                else {
                    o.query();
                }
            });
        });
    }/*}}}*/

    return o;
});
